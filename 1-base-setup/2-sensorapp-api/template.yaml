AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Sensor Application - Database lookup APIs

Parameters:
  DynamoDBSensortableName:
    Type: String
    Default: sensordata-table
  UserPoolId:
    Type: String
    Default: us-east-1_i9fzoruJJ
  ApplClientId:
    Type: String
    Default: 2j7h3v5sj1u0289poljqg9gbn2

Resources:
  SensorAppApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      Auth:
        Authorizers:
          AcmeAppApiAuthorizer:
            Type: AWS::ApiGatewayV2::Authorizer
            AuthorizerType: JWT
            IdentitySource: "$request.header.Authorization"
            #  !Sub ${ AuthHeader }
            JwtConfiguration:
              audience:
                - !Ref ApplClientId
              issuer: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPoolId}
        DefaultAuthorizer: AcmeAppApiAuthorizer

      # CORS configuration - this is open for development only and should be restricted in prod.
      # See https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-property-httpapi-httpapicorsconfiguration.html
      CorsConfiguration:
        AllowMethods:
          - GET
          - POST
          - DELETE
          - OPTIONS
        AllowHeaders:
          - "*"
        AllowOrigins:
          - "*"
  # JWTAuthorizer:
  #   Type: AWS::ApiGatewayV2::Authorizer
  #   Properties:
  #     ApiId: !Ref SensorAppApi
  #     AuthorizerType: JWT
  #     IdentitySource:
  #       - $request.header.Authorization
  #     JwtConfiguration:
  #       Audience:
  #         - !Ref ApplClientId
  #       Issuer: !Sub https://cognito-idp.${AWS::Region}.amazonaws.com/${UserPoolId}
  #     Name: sensorapp-api-authorizer
  ##########################################
  # Lambda functions                       #
  ##########################################

  GetProcessStatsFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: getProcessStats.handler
      Runtime: nodejs14.x
      Timeout: 3
      MemorySize: 128
      Environment:
        Variables:
          DDB_TABLE: !Ref DynamoDBSensortableName
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBSensortableName
      Events:
        HttpGet:
          Type: HttpApi
          Properties:
            Path: "/processStats"
            Method: get
            ApiId: !Ref SensorAppApi
  GetCompletedProcessesFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: getCompletedProcesses.handler
      Runtime: nodejs14.x
      Timeout: 3
      MemorySize: 128
      Environment:
        Variables:
          DDB_TABLE: !Ref DynamoDBSensortableName
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBSensortableName
      Events:
        HttpGet:
          Type: HttpApi
          Properties:
            Path: "/completedProcesses"
            Method: get
            ApiId: !Ref SensorAppApi
  GetFacilitySensorConfigurationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: getFacilitySensorConfig.handler
      Runtime: nodejs14.x
      Timeout: 3
      MemorySize: 128
      Environment:
        Variables:
          DDB_TABLE: !Ref DynamoDBSensortableName
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBSensortableName
      Events:
        HttpGet:
          Type: HttpApi
          Properties:
            Path: "/facilitysensorconfig"
            Method: get
            ApiId: !Ref SensorAppApi
  SetFacilitySensorConfigurationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/
      Handler: setFacilitySensorConfig.handler
      Runtime: nodejs14.x
      Timeout: 3
      MemorySize: 128
      Environment:
        Variables:
          DDB_TABLE: !Ref DynamoDBSensortableName
      Policies:
        DynamoDBCrudPolicy:
          TableName: !Ref DynamoDBSensortableName
      Events:
        HttpPost:
          Type: HttpApi
          Properties:
            Path: "/savefacilitysensorconfig"
            Method: post
            ApiId: !Ref SensorAppApi
Outputs:
  APIendpoint:
    Description: HTTP API endpoint URL.
    Value: !Sub "https://${SensorAppApi}.execute-api.${AWS::Region}.amazonaws.com"
